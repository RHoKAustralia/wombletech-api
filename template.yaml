AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31
Description: >
  WombletechRHoK

  SAM Template for WombletechRHoK stack

# More info about Globals: https://github.com/awslabs/serverless-application-model/blob/master/docs/globals.rst
Globals:
  Function:
    Timeout: 3
    Runtime: nodejs14.x

Parameters:
  Env:
    Description: Deployment environment
    Default: test
    Type: String
    AllowedValues:
      - prod
      - test
  CognitoSlug:
    Description: The final part of the Cognito ARN (get from AWS console)
    Type: String

Resources:
  ListDonationsFunction:
    Type: AWS::Serverless::Function # More info about Function Resource: https://github.com/awslabs/serverless-application-model/blob/master/versions/2016-10-31.md#awsserverlessfunction
    Properties:
      Handler: app.lambdaHandler
      CodeUri: dist/donation/get
      Environment:
        Variables:
          TARGET_REGION: !Sub '${AWS::Region}'
      Events:
        Api:
          Type: Api # More info about API Event Source: https://github.com/awslabs/serverless-application-model/blob/master/versions/2016-10-31.md#api
          Properties:
            Path: /donation
            Method: get
            RestApiId: !Ref RestApi
            Auth:
              Authorizer: CognitoAuthorizer
              AuthorizationScopes:
                - admin-ui/admin
      Role: !GetAtt WombletechRHoKFunctionRole.Arn

  SubmitDonationFunction:
    Type: AWS::Serverless::Function # More info about Function Resource: https://github.com/awslabs/serverless-application-model/blob/master/versions/2016-10-31.md#awsserverlessfunction
    Properties:
      Handler: app.lambdaHandler
      CodeUri: dist/donation/post
      Environment:
        Variables:
          TARGET_REGION: !Sub '${AWS::Region}'
      Events:
        Api:
          Type: Api # More info about API Event Source: https://github.com/awslabs/serverless-application-model/blob/master/versions/2016-10-31.md#api
          Properties:
            Path: /donation
            Method: post
            RestApiId: !Ref RestApi
            Auth:
              Authorizer: 'NONE'
      Role: !GetAtt WombletechRHoKFunctionRole.Arn

  UpdateDonationFunction:
    Type: AWS::Serverless::Function # More info about Function Resource: https://github.com/awslabs/serverless-application-model/blob/master/versions/2016-10-31.md#awsserverlessfunction
    Properties:
      Handler: app.lambdaHandler
      CodeUri: dist/donation/put
      Environment:
        Variables:
          TARGET_REGION: !Sub '${AWS::Region}'
      Events:
        Api:
          Type: Api # More info about API Event Source: https://github.com/awslabs/serverless-application-model/blob/master/versions/2016-10-31.md#api
          Properties:
            Path: /donation
            Method: put
            RestApiId: !Ref RestApi
            Auth:
              Authorizer: CognitoAuthorizer
              AuthorizationScopes:
                - admin-ui/admin
      Role: !GetAtt WombletechRHoKFunctionRole.Arn

  ListDonatedItemFunction:
    Type: AWS::Serverless::Function # More info about Function Resource: https://github.com/awslabs/serverless-application-model/blob/master/versions/2016-10-31.md#awsserverlessfunction
    Properties:
      Handler: app.lambdaHandler
      CodeUri: dist/item/get
      Environment:
        Variables:
          TARGET_REGION: !Sub '${AWS::Region}'
      Events:
        Api:
          Type: Api # More info about API Event Source: https://github.com/awslabs/serverless-application-model/blob/master/versions/2016-10-31.md#api
          Properties:
            Path: /donation/{id}/item
            Method: get
            RestApiId: !Ref RestApi
            Auth:
              Authorizer: CognitoAuthorizer
              AuthorizationScopes:
                - admin-ui/admin
      Role: !GetAtt WombletechRHoKFunctionRole.Arn

  SubmitDonatedItemFunction:
    Type: AWS::Serverless::Function # More info about Function Resource: https://github.com/awslabs/serverless-application-model/blob/master/versions/2016-10-31.md#awsserverlessfunction
    Properties:
      Handler: app.lambdaHandler
      CodeUri: dist/item/post
      Environment:
        Variables:
          TARGET_REGION: !Sub '${AWS::Region}'
      Events:
        Api:
          Type: Api # More info about API Event Source: https://github.com/awslabs/serverless-application-model/blob/master/versions/2016-10-31.md#api
          Properties:
            Path: /donation/{id}/item
            Method: post
            RestApiId: !Ref RestApi
            Auth:
              Authorizer: CognitoAuthorizer
              AuthorizationScopes:
                - admin-ui/admin
      Role: !GetAtt WombletechRHoKFunctionRole.Arn

  UpdateDonatedItemFunction:
    Type: AWS::Serverless::Function # More info about Function Resource: https://github.com/awslabs/serverless-application-model/blob/master/versions/2016-10-31.md#awsserverlessfunction
    Properties:
      Handler: app.lambdaHandler
      CodeUri: dist/item/put
      Environment:
        Variables:
          TARGET_REGION: !Sub '${AWS::Region}'
      Events:
        Api:
          Type: Api # More info about API Event Source: https://github.com/awslabs/serverless-application-model/blob/master/versions/2016-10-31.md#api
          Properties:
            Path: /donation/{id}/item
            Method: put
            RestApiId: !Ref RestApi
            Auth:
              Authorizer: CognitoAuthorizer
              AuthorizationScopes:
                - admin-ui/admin
      Role: !GetAtt WombletechRHoKFunctionRole.Arn

  WombletechRHoKFunctionRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Principal:
              Service:
                - lambda.amazonaws.com
            Action:
              - sts:AssumeRole
      Policies:
        - PolicyName: allowLogging
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
              - Effect: Allow
                Action:
                  - logs:*
                Resource: arn:aws:logs:*:*:*
        - PolicyName: accessWombleTechDynamoDB 
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
              - Effect: Allow
                Action:
                  - dynamodb:*
                Resource: !Sub 'arn:aws:dynamodb:${AWS::Region}:*:table/wombletech*'

  RestApi:
    Type: AWS::Serverless::Api # https://docs.aws.amazon.com/serverless-application-model/latest/developerguide/sam-resource-api.html
    Properties:
      StageName: !Ref Env
      Cors:
        AllowMethods: "'GET,POST,PUT,OPTIONS'"
        AllowHeaders: "'Content-Type'"
        AllowOrigin: "'*'"
      Auth:
        DefaultAuthorizer: CognitoAuthorizer
        AddDefaultAuthorizerToCorsPreflight: false # < ignore template schema validation error - this is correct
        Authorizers:
          CognitoAuthorizer:
            AuthType: "COGNITO_USER_POOLS"
            UserPoolArn: 
              - !Sub 'arn:aws:cognito-idp:${AWS::Region}:${AWS::AccountId}:userpool/${AWS::Region}_${CognitoSlug}' 
            Identity:
              Header: 'Authorization'

Outputs:
  # ServerlessRestApi is an implicit API created out of Events key under Serverless::Function
  # Find out more about other implicit resources you can reference within SAM
  # https://github.com/awslabs/serverless-application-model/blob/master/docs/internals/generated_resources.rst#api
  WombletechRHoKDonationApi:
    Description: "API Gateway endpoint URL for Prod stage managing donations"
    Value: !Sub "https://${RestApi}.execute-api.${AWS::Region}.amazonaws.com/${Env}/donation"
  ListDonationsFunction:
    Description: "Lambda Function To list donations"
    Value: !GetAtt ListDonationsFunction.Arn
  SubmitDonationFunction:
    Description: "Lambda Function To submit donations"
    Value: !GetAtt SubmitDonationFunction.Arn
  UpdateDonationFunction:
    Description: "Lambda Function To update donations"
    Value: !GetAtt UpdateDonationFunction.Arn
  WombletechRHoKFunctionRole:
    Description: "IAM Role created for Lambdas"
    Value: !GetAtt WombletechRHoKFunctionRole.Arn
